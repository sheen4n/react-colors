{"version":3,"sources":["utils/colorHelper.js","ColorBox.js","Navbar.js","PaletteFooter.js","context/createDataContext.js","data/seedColors.js","context/PaletteContext.js","SingleColorPalette.js","MiniPalette.js","DeletePaletteDialog.js","PaletteList.js","Palette.js","PaletteDrawer.js","config/ui-variables.js","context/NewPaletteFormContext.js","PaletteColorPicker.js","PaletteFormContent.js","PaletteFormAppBar.js","DraggableColorBox.js","DraggableColorList.js","PaletteMetaForm.js","NewPaletteForm.js","App.js","serviceWorker.js","index.js"],"names":["levels","generatePalette","colors","emoji","id","newPalette","paletteName","generateScale","hexColor","numberOfColors","chroma","scale","darken","hex","getRange","mode","map","level","color","length","reverse","shadeOfScale","i","push","name","toLowerCase","replace","rgb","css","rgba","ColorBox","format","showMore","useState","copied","setCopied","colorCode","isDarkColor","luminance","isLightColor","text","onCopy","setTimeout","className","style","background","to","paletteId","onClick","e","stopPropagation","Navbar","changeLevel","changeFormat","showSlider","snackbarOpen","setSnackbarOpen","defaultValue","min","max","step","onAfterChange","Select","onChange","value","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","toUpperCase","ContentProps","onClose","action","IconButton","key","PaletteFooter","reducer","actions","initialState","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundedActions","Object","keys","reduce","result","createDataContext","payload","type","filter","p","addPalette","removePalette","JSON","parse","window","localStorage","getItem","seedData","withRouter","match","setFormat","palette","useContext","find","params","deepClone","_","cloneDeep","element","colorId","singlePaletteColors","colorArray","k","target","withStyles","root","backgroundColor","borderRadius","padding","position","overflow","cursor","height","width","title","display","justifyContent","alignItems","margin","paddingTop","fontSize","marginLeft","miniColor","marginBottom","classes","goToPalette","DeletePaletteDialog","closeDialog","handleDelete","Dialog","aria-labelledby","DialogTitle","List","ListItem","button","ListItemAvatar","Avatar","blue","ListItemText","primary","red","history","palettes","openDeleteDialog","setOpenDeleteDialog","deleteId","setDeleteId","openDialog","useEffect","setItem","stringify","setLevel","existingPalette","newLevel","useStyles","makeStyles","theme","drawer","flexShrink","drawerPaper","drawerHeader","spacing","mixins","toolbar","PaletteDrawer","drawerOpen","setDrawerOpen","Drawer","variant","anchor","paper","Divider","arrayMove","require","INITIAL_STATE","newPaletteName","newColors","newColorName","errorMessage","newColor","c","oldIndex","newIndex","deleteColor","resetNewPaletteForm","changeNewColor","setErrorMessage","addColorToPalette","changeNewPaletteName","changeNewColorName","changeColorsSequence","clearColors","PaletteColorPicker","PaletteContext","NewPaletteFormContext","newFormState","isPaletteFull","resetForm","Button","allColors","flat","nc","includes","randomColor","Math","floor","random","disabled","onChangeComplete","onSubmit","newColorObject","isNameUnique","every","n","isColorUnique","trim","label","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","PaletteFormContent","clsx","appBar","appBarShift","menuButton","marginRight","hide","PaletteFormAppBar","AppBar","Toolbar","aria-label","edge","Typography","noWrap","SortableElement","removeColor","SortableContainer","index","hideForm","stage","setStage","ValidatorForm","addValidationRule","onSelect","native","DialogContent","DialogContentText","fullWidth","validators","errorMessages","DialogActions","showForm","setShowForm","CssBaseline","axis","onSortEnd","App","exact","path","render","SingleColorPalette","NewPaletteForm","Palette","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.2c385735.chunk.js","sourcesContent":["// {\r\n//     paletteName: 'Flat UI Colors French',\r\n//     id: 'flat-ui-colors-french',\r\n//     emoji: '🇫🇷',\r\n//     colors: [\r\n//       { name: 'FlatFlesh', color: '#fad390' },\r\n//       { name: 'MelonMelody', color: '#f8c291' },\r\n//       { name: 'Livid', color: '#6a89cc' },\r\n//       { name: 'Spray', color: '#82ccdd' },\r\n//       { name: 'ParadiseGreen', color: '#b8e994' },\r\n//       { name: 'SquashBlossom', color: '#f6b93b' },\r\n//       { name: 'MandarinRed', color: '#e55039' },\r\n//       { name: 'AzraqBlue', color: '#4a69bd' },\r\n//       { name: 'Dupain', color: '#60a3bc' },\r\n//       { name: 'AuroraGreen', color: '#78e08f' },\r\n//       { name: 'IcelandPoppy', color: '#fa983a' },\r\n//       { name: 'TomatoRed', color: '#eb2f06' },\r\n//       { name: 'YueGuangBlue', color: '#1e3799' },\r\n//       { name: 'GoodSamaritan', color: '#3c6382' },\r\n//       { name: 'Waterfall', color: '#38ada9' },\r\n//       { name: 'CarrotOrange', color: '#e58e26' },\r\n//       { name: 'JalapenoRed', color: '#b71540' },\r\n//       { name: 'DarkSapphire', color: '#0c2461' },\r\n//       { name: 'ForestBlues', color: '#0a3d62' },\r\n//       { name: 'ReefEncounter', color: '#079992' }\r\n//     ]\r\n//   }\r\n\r\nimport chroma from 'chroma-js';\r\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n\r\nconst generatePalette = ({ colors, emoji, id, paletteName }) => {\r\n  let newPalette = {\r\n    paletteName,\r\n    id,\r\n    emoji,\r\n    colors: {}\r\n  };\r\n\r\n  const getRange = hexColor => [\r\n    chroma(hexColor)\r\n      .darken(1.4)\r\n      .hex(),\r\n    hexColor,\r\n    '#ffffff'\r\n  ];\r\n\r\n  const generateScale = (hexColor, numberOfColors) =>\r\n    chroma\r\n      .scale(getRange(hexColor))\r\n      .mode('lab')\r\n      .colors(numberOfColors);\r\n\r\n  levels.map(level => (newPalette.colors[level] = []));\r\n\r\n  colors.map(color =>\r\n    generateScale(color.color, levels.length)\r\n      .reverse()\r\n      .map((shadeOfScale, i) =>\r\n        newPalette.colors[levels[i]].push({\r\n          name: `${color.name} ${levels[i]}`,\r\n          id: color.name.toLowerCase().replace(/ /g, '-'),\r\n          hex: shadeOfScale,\r\n          rgb: chroma(shadeOfScale).css(),\r\n          rgba: chroma(shadeOfScale)\r\n            .css()\r\n            .replace('rgb', 'rgba')\r\n            .replace(')', ',1.0)')\r\n        })\r\n      )\r\n  );\r\n\r\n  return newPalette;\r\n};\r\n\r\nexport default generatePalette;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport chroma from 'chroma-js';\r\n\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport './ColorBox.css';\r\n\r\nconst ColorBox = ({ name, format, showMore, ...color }) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const colorCode = color[format];\r\n\r\n  const showCopyTransition = () => {\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 1500);\r\n  };\r\n\r\n  const isDarkColor = chroma(colorCode).luminance() <= 0.1;\r\n  const isLightColor = chroma(colorCode).luminance() >= 0.6;\r\n\r\n  return (\r\n    <CopyToClipboard text={colorCode} onCopy={showCopyTransition}>\r\n      <div className=\"ColorBox\" style={{ background: colorCode }}>\r\n        <div\r\n          className={`copy-overlay ${copied && 'show'}`}\r\n          style={{ background: colorCode }}\r\n        />\r\n        <div className={`copy-msg ${copied && 'show'}`}>\r\n          <h1 className={`${isLightColor && 'dark-text'}`}>COPIED</h1>\r\n          <p className={`${isLightColor && 'dark-text'}`}>{colorCode}</p>\r\n        </div>\r\n        <div className=\"copy-container\">\r\n          <div className=\"box-content\">\r\n            <span className={isDarkColor ? 'light-text' : ''}>{name}</span>\r\n          </div>\r\n        </div>\r\n        <button className=\"copy-button\">Copy</button>\r\n        {showMore && (\r\n          <Link\r\n            to={`/palette/${color.paletteId}/${color.id}`}\r\n            onClick={e => e.stopPropagation()}\r\n          >\r\n            <span className={`see-more ${isLightColor && 'dark-text'}`}>\r\n              More\r\n            </span>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </CopyToClipboard>\r\n  );\r\n};\r\n\r\nexport default ColorBox;\r\n","import React, { useState } from 'react';\r\nimport Slider from 'rc-slider';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport 'rc-slider/assets/index.css';\r\nimport './Navbar.css';\r\nimport { MenuItem, IconButton, Snackbar, Select } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ level, changeLevel, format, changeFormat, showSlider }) => {\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  const handleChangeSelect = e => {\r\n    changeFormat(e);\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Navbar\">\r\n      <div className=\"logo\">\r\n        <Link to=\"/\">ReactColorPicker</Link>\r\n      </div>\r\n      {showSlider && (\r\n        <div className=\"slider-container\">\r\n          <span>Level : {level}</span>\r\n          <div className=\"slider\">\r\n            <Slider\r\n              defaultValue={level}\r\n              min={100}\r\n              max={900}\r\n              step={100}\r\n              onAfterChange={changeLevel}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"select-container\">\r\n        <Select onChange={handleChangeSelect} value={format}>\r\n          <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\r\n          <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\r\n          <MenuItem value=\"rgba\">RGBA - rgba(255,255,255,1.0)</MenuItem>\r\n        </Select>\r\n      </div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n        open={snackbarOpen}\r\n        autoHideDuration={3000}\r\n        message={\r\n          <span id=\"message-id\">Format Changed To {format.toUpperCase()}</span>\r\n        }\r\n        ContentProps={{ 'aria-describedby': 'message-id' }}\r\n        onClose={() => setSnackbarOpen(false)}\r\n        action={[\r\n          <IconButton\r\n            onClick={() => setSnackbarOpen(false)}\r\n            color=\"inherit\"\r\n            key=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ]}\r\n      ></Snackbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './PaletteFooter.css';\r\n\r\nconst PaletteFooter = ({ paletteName, emoji }) => {\r\n  return (\r\n    <footer className=\"Palette-footer\">\r\n      {paletteName}\r\n      <span className=\"emoji\">{emoji}</span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default PaletteFooter;\r\n","import React, { useReducer } from 'react';\r\n\r\nexport default (reducer, actions, initialState) => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const boundedActions = Object.keys(actions).reduce((result, key) => {\r\n      return { ...result, [key]: actions[key](dispatch) };\r\n    }, {});\r\n\r\n    return (\r\n      <Context.Provider value={{ state, ...boundedActions }}>\r\n        {children}\r\n      </Context.Provider>\r\n    );\r\n  };\r\n\r\n  return { Context, Provider };\r\n};\r\n","export default [\r\n  {\r\n    paletteName: 'Material UI Colors',\r\n    id: 'material-ui-colors',\r\n    emoji: '🎨',\r\n    colors: [\r\n      { name: 'red', color: '#F44336' },\r\n      { name: 'pink', color: '#E91E63' },\r\n      { name: 'purple', color: '#9C27B0' },\r\n      { name: 'deeppurple', color: '#673AB7' },\r\n      { name: 'indigo', color: '#3F51B5' },\r\n      { name: 'blue', color: '#2196F3' },\r\n      { name: 'lightblue', color: '#03A9F4' },\r\n      { name: 'cyan', color: '#00BCD4' },\r\n      { name: 'teal', color: '#009688' },\r\n      { name: 'green', color: '#4CAF50' },\r\n      { name: 'lightgreen', color: '#8BC34A' },\r\n      { name: 'lime', color: '#CDDC39' },\r\n      { name: 'yellow', color: '#FFEB3B' },\r\n      { name: 'amber', color: '#FFC107' },\r\n      { name: 'orange', color: '#FF9800' },\r\n      { name: 'deeporange', color: '#FF5722' },\r\n      { name: 'brown', color: '#795548' },\r\n      { name: 'grey', color: '#9E9E9E' },\r\n      { name: 'bluegrey', color: '#607D8B' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors v1',\r\n    id: 'flat-ui-colors-v1',\r\n    emoji: '🤙',\r\n    colors: [\r\n      { name: 'Turquoise', color: '#1abc9c' },\r\n      { name: 'Emerald', color: '#2ecc71' },\r\n      { name: 'PeterRiver', color: '#3498db' },\r\n      { name: 'Amethyst', color: '#9b59b6' },\r\n      { name: 'WetAsphalt', color: '#34495e' },\r\n      { name: 'GreenSea', color: '#16a085' },\r\n      { name: 'Nephritis', color: '#27ae60' },\r\n      { name: 'BelizeHole', color: '#2980b9' },\r\n      { name: 'Wisteria', color: '#8e44ad' },\r\n      { name: 'MidnightBlue', color: '#2c3e50' },\r\n      { name: 'SunFlower', color: '#f1c40f' },\r\n      { name: 'Carrot', color: '#e67e22' },\r\n      { name: 'Alizarin', color: '#e74c3c' },\r\n      { name: 'Clouds', color: '#ecf0f1' },\r\n      { name: 'Concrete', color: '#95a5a6' },\r\n      { name: 'Orange', color: '#f39c12' },\r\n      { name: 'Pumpkin', color: '#d35400' },\r\n      { name: 'Pomegranate', color: '#c0392b' },\r\n      { name: 'Silver', color: '#bdc3c7' },\r\n      { name: 'Asbestos', color: '#7f8c8d' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors Dutch',\r\n    id: 'flat-ui-colors-dutch',\r\n    emoji: '🇳🇱',\r\n    colors: [\r\n      { name: 'Sunflower', color: '#FFC312' },\r\n      { name: 'Energos', color: '#C4E538' },\r\n      { name: 'BlueMartina', color: '#12CBC4' },\r\n      { name: 'LavenderRose', color: '#FDA7DF' },\r\n      { name: 'BaraRose', color: '#ED4C67' },\r\n      { name: 'RadiantYellow', color: '#F79F1F' },\r\n      { name: 'AndroidGreen', color: '#A3CB38' },\r\n      { name: 'MediterraneanSea', color: '#1289A7' },\r\n      { name: 'LavenderTea', color: '#D980FA' },\r\n      { name: 'VerryBerry', color: '#B53471' },\r\n      { name: 'PuffinsBill', color: '#EE5A24' },\r\n      { name: 'PixelatedGrass', color: '#009432' },\r\n      { name: 'MerchantMarineBlue', color: '#0652DD' },\r\n      { name: 'ForgottenPurple', color: '#9980FA' },\r\n      { name: 'HollyHock', color: '#833471' },\r\n      { name: 'RedPigment', color: '#EA2027' },\r\n      { name: 'TurkishAqua', color: '#006266' },\r\n      { name: '20000LeaguesUnderTheSea', color: '#1B1464' },\r\n      { name: 'CircumorbitalRing', color: '#5758BB' },\r\n      { name: 'MagentaPurple', color: '#6F1E51' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors American',\r\n    id: 'flat-ui-colors-american',\r\n    emoji: '🇺🇸',\r\n    colors: [\r\n      { name: 'LightGreenishBlue', color: '#55efc4' },\r\n      { name: 'FadedPoster', color: '#81ecec' },\r\n      { name: 'GreenDarnerTail', color: '#74b9ff' },\r\n      { name: 'ShyMoment', color: '#a29bfe' },\r\n      { name: 'CityLights', color: '#dfe6e9' },\r\n      { name: 'MintLeaf', color: '#00b894' },\r\n      { name: 'RobinsEggBlue', color: '#00cec9' },\r\n      { name: 'ElectronBlue', color: '#0984e3' },\r\n      { name: 'ExodusFruit', color: '#6c5ce7' },\r\n      { name: 'SoothingBreeze', color: '#b2bec3' },\r\n      { name: 'SourLemon', color: '#ffeaa7' },\r\n      { name: 'FirstDate', color: '#fab1a0' },\r\n      { name: 'PinkGlamour', color: '#ff7675' },\r\n      { name: 'Pico8Pink', color: '#fd79a8' },\r\n      { name: 'AmericanRiver', color: '#636e72' },\r\n      { name: 'BrightYarrow', color: '#fdcb6e' },\r\n      { name: 'OrangeVille', color: '#e17055' },\r\n      { name: 'Chi-Gong', color: '#d63031' },\r\n      { name: 'PrunusAvium', color: '#e84393' },\r\n      { name: 'DraculaOrchid', color: '#2d3436' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors Aussie',\r\n    id: 'flat-ui-colors-aussie',\r\n    emoji: '🇦🇺',\r\n    colors: [\r\n      { name: 'Beekeeper', color: '#f6e58d' },\r\n      { name: 'SpicedNectarine', color: '#ffbe76' },\r\n      { name: 'PinkGlamour', color: '#ff7979' },\r\n      { name: 'JuneBud', color: '#badc58' },\r\n      { name: 'CoastalBreeze', color: '#dff9fb' },\r\n      { name: 'Turbo', color: '#f9ca24' },\r\n      { name: 'QuinceJelly', color: '#f0932b' },\r\n      { name: 'CarminePink', color: '#eb4d4b' },\r\n      { name: 'PureApple', color: '#6ab04c' },\r\n      { name: 'HintOfIcePack', color: '#c7ecee' },\r\n      { name: 'MiddleBlue', color: '#7ed6df' },\r\n      { name: 'Heliotrope', color: '#e056fd' },\r\n      { name: 'ExodusFruit', color: '#686de0' },\r\n      { name: 'DeepKoamaru', color: '#30336b' },\r\n      { name: 'SoaringEagle', color: '#95afc0' },\r\n      { name: 'GreenlandGreen', color: '#22a6b3' },\r\n      { name: 'SteelPink', color: '#be2edd' },\r\n      { name: 'Blurple', color: '#4834d4' },\r\n      { name: 'DeepCove', color: '#130f40' },\r\n      { name: 'WizardGrey', color: '#535c68' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors British',\r\n    id: 'flat-ui-colors-british',\r\n    emoji: '🇬🇧',\r\n    colors: [\r\n      { name: 'ProtossPylon', color: '#00a8ff' },\r\n      { name: 'Periwinkle', color: '#9c88ff' },\r\n      { name: 'Rise-N-Shine', color: '#fbc531' },\r\n      { name: 'DownloadProgress', color: '#4cd137' },\r\n      { name: 'Seabrook', color: '#487eb0' },\r\n      { name: 'VanaDylBlue', color: '#0097e6' },\r\n      { name: 'MattPurple', color: '#8c7ae6' },\r\n      { name: 'NanohanachaGold', color: '#e1b12c' },\r\n      { name: 'SkirretGreen', color: '#44bd32' },\r\n      { name: 'Naval', color: '#40739e' },\r\n      { name: 'NasturcianFlower', color: '#e84118' },\r\n      { name: 'LynxWhite', color: '#f5f6fa' },\r\n      { name: 'BlueberrySoda', color: '#7f8fa6' },\r\n      { name: 'MazarineBlue', color: '#273c75' },\r\n      { name: 'BlueNights', color: '#353b48' },\r\n      { name: 'HarleyOrange', color: '#c23616' },\r\n      { name: 'HintOfPensive', color: '#dcdde1' },\r\n      { name: 'ChainGangGrey', color: '#718093' },\r\n      { name: 'PicoVoid', color: '#192a56' },\r\n      { name: 'ElectroMagnetic', color: '#2f3640' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors Spanish',\r\n    id: 'flat-ui-colors-spanish',\r\n    emoji: '🇪🇸',\r\n    colors: [\r\n      { name: 'JacksonsPurple', color: '#40407a' },\r\n      { name: 'C64Purple', color: '#706fd3' },\r\n      { name: 'SwanWhite', color: '#f7f1e3' },\r\n      { name: 'SummerSky', color: '#34ace0' },\r\n      { name: 'CelestialGreen', color: '#33d9b2' },\r\n      { name: 'LuckyPoint', color: '#2c2c54' },\r\n      { name: 'Liberty', color: '#474787' },\r\n      { name: 'HotStone', color: '#aaa69d' },\r\n      { name: 'DevilBlue', color: '#227093' },\r\n      { name: 'PalmSpringsSplash', color: '#218c74' },\r\n      { name: 'FlourescentRed', color: '#ff5252' },\r\n      { name: 'SyntheticPumpkin', color: '#ff793f' },\r\n      { name: 'CrocodileTooth', color: '#d1ccc0' },\r\n      { name: 'MandarinSorbet', color: '#ffb142' },\r\n      { name: 'SpicedButterNut', color: '#ffda79' },\r\n      { name: 'EyeOfNewt', color: '#b33939' },\r\n      { name: 'ChileanFire', color: '#cd6133' },\r\n      { name: 'GreyPorcelain', color: '#84817a' },\r\n      { name: 'AlamedaOchre', color: '#cc8e35' },\r\n      { name: 'Desert', color: '#ccae62' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors Indian',\r\n    id: 'flat-ui-colors-indian',\r\n    emoji: '🇮🇳',\r\n    colors: [\r\n      { name: 'OrchidOrange', color: '#FEA47F' },\r\n      { name: 'SpiroDiscoBall', color: '#25CCF7' },\r\n      { name: 'HoneyGlow', color: '#EAB543' },\r\n      { name: 'SweetGarden', color: '#55E6C1' },\r\n      { name: 'FallingStar', color: '#CAD3C8' },\r\n      { name: 'RichGardenia', color: '#F97F51' },\r\n      { name: 'ClearChill', color: '#1B9CFC' },\r\n      { name: 'WhitePepper', color: '#F8EFBA' },\r\n      { name: 'Keppel', color: '#58B19F' },\r\n      { name: 'ShipsOfficer', color: '#2C3A47' },\r\n      { name: 'FieryFuchsia', color: '#B33771' },\r\n      { name: 'BlueBell', color: '#3B3B98' },\r\n      { name: 'GeorgiaPeach', color: '#FD7272' },\r\n      { name: 'OasisStream', color: '#9AECDB' },\r\n      { name: 'BrightUbe', color: '#D6A2E8' },\r\n      { name: 'MagentaPurple', color: '#6D214F' },\r\n      { name: 'EndingNavyBlue', color: '#182C61' },\r\n      { name: 'SasquatchSocks', color: '#FC427B' },\r\n      { name: 'PineGlade', color: '#BDC581' },\r\n      { name: 'HighlighterLavender', color: '#82589F' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors French',\r\n    id: 'flat-ui-colors-french',\r\n    emoji: '🇫🇷',\r\n    colors: [\r\n      { name: 'FlatFlesh', color: '#fad390' },\r\n      { name: 'MelonMelody', color: '#f8c291' },\r\n      { name: 'Livid', color: '#6a89cc' },\r\n      { name: 'Spray', color: '#82ccdd' },\r\n      { name: 'ParadiseGreen', color: '#b8e994' },\r\n      { name: 'SquashBlossom', color: '#f6b93b' },\r\n      { name: 'MandarinRed', color: '#e55039' },\r\n      { name: 'AzraqBlue', color: '#4a69bd' },\r\n      { name: 'Dupain', color: '#60a3bc' },\r\n      { name: 'AuroraGreen', color: '#78e08f' },\r\n      { name: 'IcelandPoppy', color: '#fa983a' },\r\n      { name: 'TomatoRed', color: '#eb2f06' },\r\n      { name: 'YueGuangBlue', color: '#1e3799' },\r\n      { name: 'GoodSamaritan', color: '#3c6382' },\r\n      { name: 'Waterfall', color: '#38ada9' },\r\n      { name: 'CarrotOrange', color: '#e58e26' },\r\n      { name: 'JalapenoRed', color: '#b71540' },\r\n      { name: 'DarkSapphire', color: '#0c2461' },\r\n      { name: 'ForestBlues', color: '#0a3d62' },\r\n      { name: 'ReefEncounter', color: '#079992' }\r\n    ]\r\n  }\r\n];\r\n","import createDataContext from './createDataContext';\r\n\r\nimport seedData from '../data/seedColors';\r\n\r\nconst paletteReducer = (state, action) => {\r\n  const { payload, type } = action;\r\n\r\n  switch (type) {\r\n    case 'add_palette':\r\n      return [...state, payload];\r\n    case 'remove_palette':\r\n      return state.filter(p => p.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst addPalette = dispatch => newPalette => {\r\n  dispatch({ type: 'add_palette', payload: newPalette });\r\n};\r\n\r\nconst removePalette = dispatch => id => {\r\n  dispatch({ type: 'remove_palette', payload: id });\r\n};\r\n\r\nconst loadData = () => {\r\n  const savedPalettes = JSON.parse(window.localStorage.getItem('palettes'));\r\n  return savedPalettes || seedData;\r\n};\r\n\r\nexport const { Context, Provider } = createDataContext(\r\n  paletteReducer,\r\n  { addPalette, removePalette },\r\n  loadData()\r\n);\r\n","import React, { useState, useContext } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nimport generatePalette from './utils/colorHelper';\r\nimport ColorBox from './ColorBox';\r\nimport Navbar from './Navbar';\r\nimport PaletteFooter from './PaletteFooter';\r\nimport _ from 'lodash';\r\n\r\nimport { Context } from './context/PaletteContext';\r\n\r\nconst SingleColorPalette = ({ match }) => {\r\n  const [format, setFormat] = useState('hex');\r\n\r\n  const { state: palettes } = useContext(Context);\r\n\r\n  const palette = palettes.find(p => p.id === match.params.paletteId);\r\n\r\n  let deepClone = _.cloneDeep(palette);\r\n\r\n  deepClone.colors = [\r\n    deepClone.colors.find(\r\n      element => element.name.toLowerCase() === match.params.colorId\r\n    )\r\n  ];\r\n\r\n  const {\r\n    colors: singlePaletteColors,\r\n    emoji,\r\n    paletteName,\r\n    id: paletteId\r\n  } = generatePalette(deepClone);\r\n\r\n  const colorArray = Object.keys(singlePaletteColors)\r\n    .filter(k => k !== '50')\r\n    .map(k => singlePaletteColors[k][0]);\r\n\r\n  const changeFormat = e => setFormat(e.target.value);\r\n\r\n  return (\r\n    <div className='SingleColorPalette Palette'>\r\n      <Navbar showSlider={false} format={format} changeFormat={changeFormat} />\r\n      <div className='Palette-colors'>\r\n        {colorArray.map(color => (\r\n          <ColorBox\r\n            {...color}\r\n            showMore={false}\r\n            format={format}\r\n            key={color.name}\r\n          />\r\n        ))}\r\n        <div className='go-back ColorBox'>\r\n          <Link to={`/palette/${paletteId}`} className='back-button'>\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <PaletteFooter emoji={emoji} paletteName={paletteName} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SingleColorPalette);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport './MiniPalette.css';\r\n\r\nconst styles = {\r\n  root: {\r\n    backgroundColor: 'white',\r\n    borderRadius: '5px',\r\n    padding: '0.5rem',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    '&:hover': {\r\n      cursor: 'pointer'\r\n    }\r\n  },\r\n  colors: {\r\n    backgroundColor: 'white',\r\n    height: '150px',\r\n    width: '100%'\r\n  },\r\n  title: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    margin: '0',\r\n    color: 'black',\r\n    paddingTop: '0.5rem',\r\n    fontSize: '1rem',\r\n    position: 'relative'\r\n  },\r\n  emoji: {\r\n    marginLeft: '0.5rem',\r\n    fontSize: '1.5rem'\r\n  },\r\n  miniColor: {\r\n    height: '25%',\r\n    width: '20%',\r\n    display: 'inline-block',\r\n    margin: '0 auto',\r\n    position: 'relative',\r\n    marginBottom: '-3.5px'\r\n  }\r\n};\r\n\r\nconst MiniPalette = ({ classes, removePalette, ...palette }) => {\r\n  return (\r\n    <div className=\"MiniPalette\">\r\n      <div className={classes.root} onClick={palette.goToPalette}>\r\n        <DeleteIcon className=\"delete-icon\" onClick={removePalette} />\r\n        <div className={classes.colors}>\r\n          {palette.colors.map(color => (\r\n            <div\r\n              className={classes.miniColor}\r\n              style={{ backgroundColor: color.color }}\r\n              key={color.name}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n        <h5 className={classes.title}>\r\n          {palette.paletteName}\r\n          <span className={classes.emoji}>{palette.emoji}</span>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MiniPalette);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport red from '@material-ui/core/colors/red';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nconst DeletePaletteDialog = ({ open, closeDialog, handleDelete }) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby=\"delete-dialog-title\"\r\n      onClose={closeDialog}\r\n    >\r\n      <DialogTitle id=\"delete-dialog-title\">Delete This Palette?</DialogTitle>\r\n      <List>\r\n        <ListItem button onClick={handleDelete}>\r\n          <ListItemAvatar>\r\n            <Avatar style={{ backgroundColor: blue[100], color: blue[600] }}>\r\n              <CheckIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Delete\" />\r\n        </ListItem>\r\n        <ListItem button onClick={closeDialog}>\r\n          <ListItemAvatar>\r\n            <Avatar style={{ backgroundColor: red[100], color: red[600] }}>\r\n              <CloseIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Cancel\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DeletePaletteDialog;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport MiniPalette from './MiniPalette';\r\n\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nimport './PaletteList.css';\r\n\r\nimport { Context } from './context/PaletteContext';\r\nimport DeletePaletteDialog from './DeletePaletteDialog';\r\n\r\nconst PaletteList = ({ history }) => {\r\n  const { removePalette, state: palettes } = useContext(Context);\r\n\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [deleteId, setDeleteId] = useState('');\r\n\r\n  const closeDialog = () => setOpenDeleteDialog(false);\r\n\r\n  const goToPalette = id => () => history.push(`/palette/${id}`);\r\n\r\n  const openDialog = id => e => {\r\n    e.stopPropagation();\r\n    setOpenDeleteDialog(true);\r\n    setDeleteId(id);\r\n  };\r\n\r\n  const handleDeletePalette = () => {\r\n    removePalette(deleteId);\r\n    setDeleteId('');\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('palettes', JSON.stringify(palettes));\r\n  }, [palettes]);\r\n\r\n  return (\r\n    <div className=\"PaletteList\">\r\n      <div className=\"PaletteList-container\">\r\n        <nav className=\"PaletteList-header\">\r\n          <h1>React Colors</h1>\r\n          <Link to=\"/palette/new\">Create Palette</Link>\r\n        </nav>\r\n\r\n        <div className=\"PaletteList-palettes-container\">\r\n          {palettes.map(palette => (\r\n            <MiniPalette\r\n              {...palette}\r\n              goToPalette={goToPalette(palette.id)}\r\n              key={palette.id}\r\n              removePalette={openDialog(palette.id)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <DeletePaletteDialog\r\n        open={openDeleteDialog}\r\n        closeDialog={closeDialog}\r\n        handleDelete={handleDeletePalette}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(PaletteList);\r\n","import React, { useState, useContext } from 'react';\r\nimport ColorBox from './ColorBox';\r\n\r\nimport generatePalette from './utils/colorHelper';\r\n\r\nimport './Palette.css';\r\nimport Navbar from './Navbar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PaletteFooter from './PaletteFooter';\r\n\r\nimport { Context } from './context/PaletteContext';\r\n\r\nconst Palette = ({ match }) => {\r\n  const { state: palettes } = useContext(Context);\r\n\r\n  const [level, setLevel] = useState(500);\r\n  const [format, setFormat] = useState('hex');\r\n\r\n  const existingPalette = palettes.find(p => p.id === match.params.id);\r\n  if (!existingPalette) return <div>Invalid Palette</div>;\r\n\r\n  const palette = generatePalette(existingPalette);\r\n\r\n  const { colors, paletteName, emoji, id: paletteId } = palette;\r\n\r\n  const changeLevel = newLevel => setLevel(newLevel);\r\n\r\n  const changeFormat = e => setFormat(e.target.value);\r\n\r\n  return (\r\n    <div className=\"Palette\">\r\n      <Navbar\r\n        level={level}\r\n        changeLevel={changeLevel}\r\n        format={format}\r\n        changeFormat={changeFormat}\r\n        showSlider={true}\r\n      />\r\n      <div className=\"Palette-colors\">\r\n        {colors[level].map(color => (\r\n          <ColorBox\r\n            {...color}\r\n            format={format}\r\n            key={color.name}\r\n            paletteId={paletteId}\r\n            showMore={true}\r\n          />\r\n        ))}\r\n      </div>\r\n      <PaletteFooter paletteName={paletteName} emoji={emoji} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Palette);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nimport { DRAWER_WIDTH } from './config/ui-variables';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: DRAWER_WIDTH,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: DRAWER_WIDTH\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst PaletteDrawer = ({ children, drawerOpen, setDrawerOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleDrawerClose = () => setDrawerOpen(false);\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant='persistent'\r\n      anchor='left'\r\n      open={drawerOpen}\r\n      classes={{\r\n        paper: classes.drawerPaper\r\n      }}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronRightIcon />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <Divider />\r\n\r\n      {children}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default PaletteDrawer;\r\n","export const DRAWER_WIDTH = 400;\r\n","import createDataContext from './createDataContext';\r\nconst arrayMove = require('array-move');\r\n\r\nconst INITIAL_COLORS = [\r\n  { name: 'red', color: '#F44336' },\r\n  { name: 'pink', color: '#E91E63' },\r\n  { name: 'purple', color: '#9C27B0' },\r\n  { name: 'deeppurple', color: '#673AB7' },\r\n  { name: 'indigo', color: '#3F51B5' },\r\n  { name: 'blue', color: '#2196F3' },\r\n  { name: 'lightblue', color: '#03A9F4' },\r\n  { name: 'cyan', color: '#00BCD4' },\r\n  { name: 'teal', color: '#009688' },\r\n  { name: 'green', color: '#4CAF50' },\r\n  { name: 'lightgreen', color: '#8BC34A' },\r\n  { name: 'lime', color: '#CDDC39' },\r\n  { name: 'yellow', color: '#FFEB3B' },\r\n  { name: 'amber', color: '#FFC107' },\r\n  { name: 'orange', color: '#FF9800' },\r\n  { name: 'deeporange', color: '#FF5722' },\r\n  { name: 'brown', color: '#795548' },\r\n  { name: 'grey', color: '#9E9E9E' },\r\n  { name: 'bluegrey', color: '#607D8B' }\r\n];\r\n\r\nconst INITIAL_STATE = {\r\n  newPaletteName: '',\r\n  newColors: INITIAL_COLORS,\r\n  newColorName: '',\r\n  errorMessage: '',\r\n  newColor: 'teal'\r\n};\r\n\r\nconst newPaletteFormContext = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case 'reset_form':\r\n      return INITIAL_STATE;\r\n    case 'change_new_palette_name':\r\n      return { ...state, newPaletteName: payload };\r\n\r\n    case 'change_new_color_name':\r\n      return { ...state, newColorName: payload };\r\n\r\n    case 'add_color_to_new_palette':\r\n      return { ...state, newColors: [...state.newColors, payload] };\r\n    case 'remove_new_color':\r\n      return {\r\n        ...state,\r\n        newColors: [\r\n          ...state.newColors.filter(\r\n            c => c.name.toLowerCase() !== payload.toLowerCase()\r\n          )\r\n        ]\r\n      };\r\n\r\n    case 'change_colors_sequence':\r\n      return {\r\n        ...state,\r\n        newColors: arrayMove(\r\n          state.newColors,\r\n          payload.oldIndex,\r\n          payload.newIndex\r\n        )\r\n      };\r\n    case 'change_new_color':\r\n      return { ...state, newColor: payload };\r\n\r\n    case 'set_error_message':\r\n      return { ...state, errorMessage: payload };\r\n\r\n    case 'clear_colors':\r\n      return { ...state, newColors: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst changeNewPaletteName = dispatch => newPaletteName => {\r\n  dispatch({ type: 'change_new_palette_name', payload: newPaletteName });\r\n};\r\n\r\nconst changeNewColorName = dispatch => name => {\r\n  dispatch({ type: 'change_new_color_name', payload: name });\r\n};\r\n\r\nconst addColorToPalette = dispatch => newColor => {\r\n  dispatch({ type: 'add_color_to_new_palette', payload: newColor });\r\n};\r\n\r\nconst deleteColor = dispatch => name => {\r\n  dispatch({ type: 'remove_new_color', payload: name });\r\n};\r\n\r\nconst resetNewPaletteForm = dispatch => () => {\r\n  dispatch({ type: 'reset_form' });\r\n};\r\n\r\nconst changeNewColor = dispatch => color => {\r\n  dispatch({ type: 'change_new_color', payload: color });\r\n};\r\n\r\nconst setErrorMessage = dispatch => message => {\r\n  dispatch({ type: 'set_error_message', payload: message });\r\n};\r\n\r\nconst changeColorsSequence = dispatch => (oldIndex, newIndex) => {\r\n  dispatch({ type: 'change_colors_sequence', payload: { oldIndex, newIndex } });\r\n};\r\n\r\nconst clearColors = dispatch => () => {\r\n  dispatch({ type: 'clear_colors' });\r\n};\r\n\r\nexport const { Context, Provider } = createDataContext(\r\n  newPaletteFormContext,\r\n  {\r\n    deleteColor,\r\n    resetNewPaletteForm,\r\n    changeNewColor,\r\n    setErrorMessage,\r\n    addColorToPalette,\r\n    changeNewPaletteName,\r\n    changeNewColorName,\r\n    changeColorsSequence,\r\n    clearColors\r\n  },\r\n  INITIAL_STATE\r\n);\r\n","import React, { useContext } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { Context as NewPaletteFormContext } from './context/NewPaletteFormContext';\r\nimport { Context as PaletteContext } from './context/PaletteContext';\r\n\r\nimport './PaletteColorPicker.css';\r\n\r\nconst MAX_NEW_COLORS = 20;\r\n\r\nconst PaletteColorPicker = () => {\r\n  const { state: palettes } = useContext(PaletteContext);\r\n  const {\r\n    addColorToPalette,\r\n    changeNewColor,\r\n    setErrorMessage,\r\n    changeNewColorName,\r\n    clearColors,\r\n    state: newFormState\r\n  } = useContext(NewPaletteFormContext);\r\n\r\n  const { newColors, newColorName, newColor, errorMessage } = newFormState;\r\n\r\n  const isPaletteFull = newColors.length >= MAX_NEW_COLORS;\r\n\r\n  const handleAddNewColor = () => {\r\n    const newColorObject = { color: newColor, name: newColorName };\r\n\r\n    const isNameUnique = newColors\r\n      .map(c => c.name)\r\n      .every(n => n.toLowerCase() !== newColorName.toLowerCase());\r\n    const isColorUnique = newColors\r\n      .map(c => c.color)\r\n      .every(c => c !== newColor);\r\n    if (newColorName.trim() === '') return setErrorMessage('Name is required');\r\n    if (!isNameUnique) return setErrorMessage('New color name must be unique');\r\n    if (!isColorUnique) return setErrorMessage('Color already used!');\r\n\r\n    addColorToPalette(newColorObject);\r\n    resetForm();\r\n  };\r\n\r\n  const addRandomColor = () => {\r\n    const allColors = palettes\r\n      .map(p => p.colors)\r\n      .flat()\r\n      .filter(\r\n        c =>\r\n          !newColors.map(nc => nc.color).includes(c.color) &&\r\n          !newColors.map(nc => nc.name).includes(c.name)\r\n      );\r\n    const rand = Math.floor(Math.random() * allColors.length);\r\n    const randomColor = allColors[rand];\r\n    addColorToPalette(randomColor);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    changeNewColorName('');\r\n    changeNewColor('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"PaletteColorPicker\">\r\n      <h2 className=\"PaletteColorPicker-header\">Design Your Palette </h2>\r\n      <div className=\"button-container\">\r\n        <Button color=\"secondary\" variant=\"contained\" onClick={clearColors}>\r\n          CLEAR PALETTE\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={addRandomColor}\r\n          disabled={isPaletteFull}\r\n        >\r\n          RANDOM COLOR\r\n        </Button>\r\n      </div>\r\n      <ChromePicker\r\n        color={newColor}\r\n        onChangeComplete={c => changeNewColor(c.hex)}\r\n        className=\"color-picker\"\r\n      />\r\n\r\n      <ValidatorForm onSubmit={handleAddNewColor} className=\"add-color-form\">\r\n        <TextValidator\r\n          label=\"Color Name\"\r\n          value={newColorName}\r\n          onChange={e => changeNewColorName(e.target.value)}\r\n          variant=\"filled\"\r\n          className=\"color-name-input\"\r\n        />\r\n        {errorMessage && (\r\n          <span style={{ color: 'red', display: 'block' }}>{errorMessage}</span>\r\n        )}\r\n\r\n        <Button\r\n          className=\"add-color-btn\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ backgroundColor: isPaletteFull ? 'Grey' : newColor }}\r\n          type=\"submit\"\r\n          disabled={isPaletteFull}\r\n        >\r\n          {isPaletteFull ? 'PALETTE FULL' : 'ADD COLOR'}\r\n        </Button>\r\n      </ValidatorForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaletteColorPicker;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { DRAWER_WIDTH } from './config/ui-variables';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end'\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: 'calc(100vh - 64px)',\r\n    padding: 0,\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -DRAWER_WIDTH\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  }\r\n}));\r\n\r\nconst PaletteFormContent = ({ children, drawerOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main\r\n      className={clsx(classes.content, {\r\n        [classes.contentShift]: drawerOpen\r\n      })}\r\n    >\r\n      <div className={classes.drawerHeader} />\r\n      {children}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PaletteFormContent;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { DRAWER_WIDTH } from './config/ui-variables';\r\n\r\nimport './PaletteFormAppBar.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\r\n    marginLeft: DRAWER_WIDTH,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst PaletteFormAppBar = ({ children, setDrawerOpen, drawerOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleDrawerOpen = () => setDrawerOpen(true);\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      color=\"default\"\r\n      className={clsx(classes.appBar, {\r\n        [classes.appBarShift]: drawerOpen\r\n      })}\r\n    >\r\n      <Toolbar className=\"PaletteFormAppBar-toolbar\">\r\n        {!drawerOpen && (\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, drawerOpen && classes.hide)}\r\n          >\r\n            <AddToPhotosIcon />\r\n          </IconButton>\r\n        )}\r\n        <Typography variant=\"h6\" noWrap>\r\n          Create Palette\r\n        </Typography>\r\n        {children}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default PaletteFormAppBar;\r\n","import React from 'react';\r\nimport './DraggableColorBox.css';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { SortableElement } from 'react-sortable-hoc';\r\n\r\nconst DraggableColorBox = ({ color, name, removeColor }) => {\r\n  return (\r\n    <div style={{ backgroundColor: color }} className={'DraggableColorBox'}>\r\n      <div className=\"box-content\">\r\n        <span>{name}</span>\r\n        <DeleteIcon className=\"delete-icon\" onClick={removeColor} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortableElement(DraggableColorBox);\r\n","import React, { useContext } from 'react';\r\nimport { SortableContainer } from 'react-sortable-hoc';\r\nimport DraggableColorBox from './DraggableColorBox';\r\nimport { Context as NewPaletteFormContext } from './context/NewPaletteFormContext';\r\n\r\nconst DraggableColorList = () => {\r\n  const { deleteColor, state: newFormState } = useContext(\r\n    NewPaletteFormContext\r\n  );\r\n\r\n  const { newColors } = newFormState;\r\n\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      {newColors.map(({ color, name }, i) => (\r\n        <DraggableColorBox\r\n          color={color}\r\n          name={name}\r\n          removeColor={() => deleteColor(name)}\r\n          key={name}\r\n          index={i}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortableContainer(DraggableColorList);\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\n\r\nimport { Picker } from 'emoji-mart';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\nimport { Context as PaletteContext } from './context/PaletteContext';\r\n\r\nimport { Context as NewPaletteFormContext } from './context/NewPaletteFormContext';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst PaletteMetaForm = ({ hideForm, history }) => {\r\n  const [stage, setStage] = useState('form');\r\n\r\n  const { addPalette, state: palettes } = useContext(PaletteContext);\r\n\r\n  const {\r\n    changeNewPaletteName,\r\n    resetNewPaletteForm,\r\n    state: newFormState\r\n  } = useContext(NewPaletteFormContext);\r\n\r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule('isPaletteNameUnique', value =>\r\n      palettes.every(\r\n        ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\r\n      )\r\n    );\r\n  }, [palettes]);\r\n\r\n  const { newPaletteName, newColors } = newFormState;\r\n\r\n  const showEmojiPicker = () => setStage('emoji');\r\n\r\n  const createNewPalette = emoji => {\r\n    addPalette({\r\n      paletteName: newPaletteName,\r\n      id: newPaletteName.toLowerCase().replace(/ /g, '-'),\r\n      emoji: emoji.native,\r\n      colors: newColors\r\n    });\r\n    resetNewPaletteForm();\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={stage === 'emoji'} onClose={hideForm}>\r\n        <DialogTitle id=\"form-dialog-title\">Choose a Palette Emoji</DialogTitle>\r\n        <Picker title=\"Pick a Palette Emoji\" onSelect={createNewPalette} />\r\n      </Dialog>\r\n      <Dialog\r\n        open={stage === 'form'}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onClose={hideForm}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Choose a Palette Name</DialogTitle>\r\n        <ValidatorForm onSubmit={showEmojiPicker}>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Please enter a name for your new beautiful palette. Make sure it's\r\n              unique!\r\n            </DialogContentText>\r\n\r\n            <TextValidator\r\n              label=\"Palette Name\"\r\n              value={newPaletteName}\r\n              name=\"newPaletteName\"\r\n              onChange={e => changeNewPaletteName(e.target.value)}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              validators={['required', 'isPaletteNameUnique']}\r\n              errorMessages={['Enter Palette Name', 'Name already used']}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={hideForm} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Save Palette\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(PaletteMetaForm);\r\n","import React, { useState, useContext } from 'react';\r\nimport PaletteDrawer from './PaletteDrawer';\r\nimport PaletteColorPicker from './PaletteColorPicker';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport PaletteFormContent from './PaletteFormContent';\r\nimport './NewPaletteForm.css';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport PaletteFormAppBar from './PaletteFormAppBar';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { Context as NewPaletteFormContext } from './context/NewPaletteFormContext';\r\n\r\nimport DraggableColorList from './DraggableColorList';\r\nimport PaletteMetaForm from './PaletteMetaForm';\r\n\r\nconst NewPaletteForm = () => {\r\n  const { changeColorsSequence } = useContext(NewPaletteFormContext);\r\n\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    changeColorsSequence(oldIndex, newIndex);\r\n  };\r\n\r\n  const hideForm = () => setShowForm(false);\r\n  const revealForm = () => setShowForm(true);\r\n\r\n  return (\r\n    <div className=\"NewPaletteForm\">\r\n      <CssBaseline />\r\n\r\n      <PaletteFormAppBar setDrawerOpen={setDrawerOpen} drawerOpen={drawerOpen}>\r\n        <div className=\"NewPaletteForm-appbar button-group\">\r\n          <Link to=\"/\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Go Back\r\n            </Button>\r\n          </Link>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={revealForm}>\r\n            Save\r\n          </Button>\r\n        </div>\r\n\r\n        {showForm && <PaletteMetaForm hideForm={hideForm} />}\r\n      </PaletteFormAppBar>\r\n\r\n      <PaletteDrawer setDrawerOpen={setDrawerOpen} drawerOpen={drawerOpen}>\r\n        <PaletteColorPicker />\r\n      </PaletteDrawer>\r\n      <PaletteFormContent drawerOpen={drawerOpen}>\r\n        <DraggableColorList axis=\"xy\" onSortEnd={onSortEnd} />\r\n      </PaletteFormContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(NewPaletteForm);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport SingleColorPalette from './SingleColorPalette';\r\nimport PaletteList from './PaletteList';\r\nimport Palette from './Palette';\r\nimport NewPaletteForm from './NewPaletteForm';\r\n\r\nimport { Provider as PaletteProvider } from './context/PaletteContext';\r\nimport { Provider as NewPaletteFormProvider } from './context/NewPaletteFormContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <NewPaletteFormProvider>\r\n      <PaletteProvider>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path='/palette/:paletteId/:colorId'\r\n            render={SingleColorPalette}\r\n          />\r\n          <Route exact path='/' render={() => <PaletteList />} />\r\n          <Route exact path='/palette/new' render={NewPaletteForm} />\r\n          <Route exact path='/palette/:id' render={Palette} />\r\n        </Switch>\r\n      </PaletteProvider>\r\n    </NewPaletteFormProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}