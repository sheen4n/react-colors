{"version":3,"sources":["utils/colorHelper.js","ColorBox.js","Navbar.js","PaletteFooter.js","context/createDataContext.js","data/seedColors.js","context/PaletteContext.js","SingleColorPalette.js","MiniPalette.js","DeletePaletteDialog.js","PaletteList.js","Palette.js","PaletteDrawer.js","config/ui-variables.js","context/NewPaletteFormContext.js","PaletteColorPicker.js","PaletteFormContent.js","PaletteFormAppBar.js","DraggableColorBox.js","DraggableColorList.js","PaletteMetaForm.js","NewPaletteForm.js","App.js","serviceWorker.js","index.js"],"names":["levels","generatePalette","colors","emoji","id","newPalette","paletteName","generateScale","hexColor","numberOfColors","chroma","scale","darken","hex","getRange","mode","map","level","color","length","reverse","shadeOfScale","i","push","name","toLowerCase","replace","rgb","css","rgba","ColorBox","format","showMore","useState","copied","setCopied","colorCode","isDarkColor","luminance","isLightColor","text","onCopy","setTimeout","className","style","background","to","paletteId","onClick","e","stopPropagation","Navbar","changeLevel","changeFormat","showSlider","snackbarOpen","setSnackbarOpen","defaultValue","min","max","step","onAfterChange","Select","onChange","value","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","toUpperCase","ContentProps","onClose","action","IconButton","key","PaletteFooter","reducer","actions","initialState","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundedActions","Object","keys","reduce","result","createDataContext","payload","type","filter","p","addPalette","removePalette","JSON","parse","window","localStorage","getItem","seedData","withRouter","match","setFormat","palette","useContext","find","params","deepClone","_","cloneDeep","element","colorId","singlePaletteColors","colorArray","k","target","withStyles","root","backgroundColor","borderRadius","padding","position","overflow","cursor","height","width","title","display","justifyContent","alignItems","margin","paddingTop","fontSize","marginLeft","miniColor","marginBottom","classes","goToPalette","DeletePaletteDialog","closeDialog","handleDelete","Dialog","aria-labelledby","DialogTitle","List","ListItem","button","ListItemAvatar","Avatar","blue","ListItemText","primary","red","history","palettes","openDeleteDialog","setOpenDeleteDialog","deleteId","setDeleteId","openDialog","useEffect","setItem","stringify","setLevel","existingPalette","newLevel","useStyles","makeStyles","theme","drawer","flexShrink","drawerPaper","drawerHeader","spacing","mixins","toolbar","PaletteDrawer","drawerOpen","setDrawerOpen","Drawer","variant","anchor","paper","Divider","arrayMove","require","INITIAL_STATE","newPaletteName","newColors","newColorName","errorMessage","newColor","c","oldIndex","newIndex","deleteColor","resetNewPaletteForm","changeNewColor","setErrorMessage","addColorToPalette","changeNewPaletteName","changeNewColorName","changeColorsSequence","clearColors","PaletteColorPicker","PaletteContext","NewPaletteFormContext","newFormState","isPaletteFull","resetForm","Button","allColors","flat","nc","includes","randomColor","Math","floor","random","disabled","onChangeComplete","onSubmit","newColorObject","isNameUnique","every","n","isColorUnique","trim","label","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","PaletteFormContent","clsx","appBar","appBarShift","menuButton","marginRight","hide","PaletteFormAppBar","AppBar","Toolbar","aria-label","edge","Typography","noWrap","SortableElement","removeColor","SortableContainer","index","hideForm","stage","setStage","ValidatorForm","addValidationRule","onSelect","native","DialogContent","DialogContentText","fullWidth","validators","errorMessages","DialogActions","showForm","setShowForm","CssBaseline","axis","onSortEnd","App","exact","path","render","SingleColorPalette","NewPaletteForm","Palette","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c4cca465.chunk.js","sourcesContent":["// {\n//     paletteName: 'Flat UI Colors French',\n//     id: 'flat-ui-colors-french',\n//     emoji: '🇫🇷',\n//     colors: [\n//       { name: 'FlatFlesh', color: '#fad390' },\n//       { name: 'MelonMelody', color: '#f8c291' },\n//       { name: 'Livid', color: '#6a89cc' },\n//       { name: 'Spray', color: '#82ccdd' },\n//       { name: 'ParadiseGreen', color: '#b8e994' },\n//       { name: 'SquashBlossom', color: '#f6b93b' },\n//       { name: 'MandarinRed', color: '#e55039' },\n//       { name: 'AzraqBlue', color: '#4a69bd' },\n//       { name: 'Dupain', color: '#60a3bc' },\n//       { name: 'AuroraGreen', color: '#78e08f' },\n//       { name: 'IcelandPoppy', color: '#fa983a' },\n//       { name: 'TomatoRed', color: '#eb2f06' },\n//       { name: 'YueGuangBlue', color: '#1e3799' },\n//       { name: 'GoodSamaritan', color: '#3c6382' },\n//       { name: 'Waterfall', color: '#38ada9' },\n//       { name: 'CarrotOrange', color: '#e58e26' },\n//       { name: 'JalapenoRed', color: '#b71540' },\n//       { name: 'DarkSapphire', color: '#0c2461' },\n//       { name: 'ForestBlues', color: '#0a3d62' },\n//       { name: 'ReefEncounter', color: '#079992' }\n//     ]\n//   }\n\nimport chroma from 'chroma-js';\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nconst generatePalette = ({ colors, emoji, id, paletteName }) => {\n  let newPalette = {\n    paletteName,\n    id,\n    emoji,\n    colors: {}\n  };\n\n  const getRange = hexColor => [\n    chroma(hexColor)\n      .darken(1.4)\n      .hex(),\n    hexColor,\n    '#ffffff'\n  ];\n\n  const generateScale = (hexColor, numberOfColors) =>\n    chroma\n      .scale(getRange(hexColor))\n      .mode('lab')\n      .colors(numberOfColors);\n\n  levels.map(level => (newPalette.colors[level] = []));\n\n  colors.map(color =>\n    generateScale(color.color, levels.length)\n      .reverse()\n      .map((shadeOfScale, i) =>\n        newPalette.colors[levels[i]].push({\n          name: `${color.name} ${levels[i]}`,\n          id: color.name.toLowerCase().replace(/ /g, '-'),\n          hex: shadeOfScale,\n          rgb: chroma(shadeOfScale).css(),\n          rgba: chroma(shadeOfScale)\n            .css()\n            .replace('rgb', 'rgba')\n            .replace(')', ',1.0)')\n        })\n      )\n  );\n\n  return newPalette;\n};\n\nexport default generatePalette;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport chroma from 'chroma-js';\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport './styles/ColorBox.css';\n\nconst ColorBox = ({ name, format, showMore, ...color }) => {\n  const [copied, setCopied] = useState(false);\n  const colorCode = color[format];\n\n  const showCopyTransition = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1500);\n  };\n\n  const isDarkColor = chroma(colorCode).luminance() <= 0.1;\n  const isLightColor = chroma(colorCode).luminance() >= 0.6;\n\n  return (\n    <CopyToClipboard text={colorCode} onCopy={showCopyTransition}>\n      <div className='ColorBox' style={{ background: colorCode }}>\n        <div\n          className={`copy-overlay ${copied && 'show'}`}\n          style={{ background: colorCode }}\n        />\n        <div className={`copy-msg ${copied && 'show'}`}>\n          <h1 className={`${isLightColor && 'dark-text'}`}>COPIED</h1>\n          <p className={`${isLightColor && 'dark-text'}`}>{colorCode}</p>\n        </div>\n        <div className='copy-container'>\n          <div className='box-content'>\n            <span className={isDarkColor ? 'light-text' : ''}>{name}</span>\n          </div>\n        </div>\n        <button className='copy-button'>Copy</button>\n        {showMore && (\n          <Link\n            to={`/palette/${color.paletteId}/${color.id}`}\n            onClick={e => e.stopPropagation()}\n          >\n            <span className={`see-more ${isLightColor && 'dark-text'}`}>\n              More\n            </span>\n          </Link>\n        )}\n      </div>\n    </CopyToClipboard>\n  );\n};\n\nexport default ColorBox;\n","import React, { useState } from 'react';\nimport Slider from 'rc-slider';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport 'rc-slider/assets/index.css';\nimport './styles/Navbar.css';\nimport { MenuItem, IconButton, Snackbar, Select } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = ({ level, changeLevel, format, changeFormat, showSlider }) => {\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  const handleChangeSelect = e => {\n    changeFormat(e);\n    setSnackbarOpen(true);\n  };\n\n  return (\n    <header className='Navbar'>\n      <div className='logo'>\n        <Link to='/'>ReactColorPicker</Link>\n      </div>\n      {showSlider && (\n        <div className='slider-container'>\n          <span>Level : {level}</span>\n          <div className='slider'>\n            <Slider\n              defaultValue={level}\n              min={100}\n              max={900}\n              step={100}\n              onAfterChange={changeLevel}\n            />\n          </div>\n        </div>\n      )}\n\n      <div className='select-container'>\n        <Select onChange={handleChangeSelect} value={format}>\n          <MenuItem value='hex'>HEX - #ffffff</MenuItem>\n          <MenuItem value='rgb'>RGB - rgb(255,255,255)</MenuItem>\n          <MenuItem value='rgba'>RGBA - rgba(255,255,255,1.0)</MenuItem>\n        </Select>\n      </div>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        open={snackbarOpen}\n        autoHideDuration={3000}\n        message={\n          <span id='message-id'>Format Changed To {format.toUpperCase()}</span>\n        }\n        ContentProps={{ 'aria-describedby': 'message-id' }}\n        onClose={() => setSnackbarOpen(false)}\n        action={[\n          <IconButton\n            onClick={() => setSnackbarOpen(false)}\n            color='inherit'\n            key='close'\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      ></Snackbar>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport './styles/PaletteFooter.css';\n\nconst PaletteFooter = ({ paletteName, emoji }) => {\n  return (\n    <footer className='Palette-footer'>\n      {paletteName}\n      <span className='emoji'>{emoji}</span>\n    </footer>\n  );\n};\n\nexport default PaletteFooter;\n","import React, { useReducer } from 'react';\n\nexport default (reducer, actions, initialState) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const boundedActions = Object.keys(actions).reduce((result, key) => {\n      return { ...result, [key]: actions[key](dispatch) };\n    }, {});\n\n    return (\n      <Context.Provider value={{ state, ...boundedActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};\n","export default [\n  {\n    paletteName: 'Material UI Colors',\n    id: 'material-ui-colors',\n    emoji: '🎨',\n    colors: [\n      { name: 'red', color: '#F44336' },\n      { name: 'pink', color: '#E91E63' },\n      { name: 'purple', color: '#9C27B0' },\n      { name: 'deeppurple', color: '#673AB7' },\n      { name: 'indigo', color: '#3F51B5' },\n      { name: 'blue', color: '#2196F3' },\n      { name: 'lightblue', color: '#03A9F4' },\n      { name: 'cyan', color: '#00BCD4' },\n      { name: 'teal', color: '#009688' },\n      { name: 'green', color: '#4CAF50' },\n      { name: 'lightgreen', color: '#8BC34A' },\n      { name: 'lime', color: '#CDDC39' },\n      { name: 'yellow', color: '#FFEB3B' },\n      { name: 'amber', color: '#FFC107' },\n      { name: 'orange', color: '#FF9800' },\n      { name: 'deeporange', color: '#FF5722' },\n      { name: 'brown', color: '#795548' },\n      { name: 'grey', color: '#9E9E9E' },\n      { name: 'bluegrey', color: '#607D8B' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors v1',\n    id: 'flat-ui-colors-v1',\n    emoji: '🤙',\n    colors: [\n      { name: 'Turquoise', color: '#1abc9c' },\n      { name: 'Emerald', color: '#2ecc71' },\n      { name: 'PeterRiver', color: '#3498db' },\n      { name: 'Amethyst', color: '#9b59b6' },\n      { name: 'WetAsphalt', color: '#34495e' },\n      { name: 'GreenSea', color: '#16a085' },\n      { name: 'Nephritis', color: '#27ae60' },\n      { name: 'BelizeHole', color: '#2980b9' },\n      { name: 'Wisteria', color: '#8e44ad' },\n      { name: 'MidnightBlue', color: '#2c3e50' },\n      { name: 'SunFlower', color: '#f1c40f' },\n      { name: 'Carrot', color: '#e67e22' },\n      { name: 'Alizarin', color: '#e74c3c' },\n      { name: 'Clouds', color: '#ecf0f1' },\n      { name: 'Concrete', color: '#95a5a6' },\n      { name: 'Orange', color: '#f39c12' },\n      { name: 'Pumpkin', color: '#d35400' },\n      { name: 'Pomegranate', color: '#c0392b' },\n      { name: 'Silver', color: '#bdc3c7' },\n      { name: 'Asbestos', color: '#7f8c8d' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors Dutch',\n    id: 'flat-ui-colors-dutch',\n    emoji: '🇳🇱',\n    colors: [\n      { name: 'Sunflower', color: '#FFC312' },\n      { name: 'Energos', color: '#C4E538' },\n      { name: 'BlueMartina', color: '#12CBC4' },\n      { name: 'LavenderRose', color: '#FDA7DF' },\n      { name: 'BaraRose', color: '#ED4C67' },\n      { name: 'RadiantYellow', color: '#F79F1F' },\n      { name: 'AndroidGreen', color: '#A3CB38' },\n      { name: 'MediterraneanSea', color: '#1289A7' },\n      { name: 'LavenderTea', color: '#D980FA' },\n      { name: 'VerryBerry', color: '#B53471' },\n      { name: 'PuffinsBill', color: '#EE5A24' },\n      { name: 'PixelatedGrass', color: '#009432' },\n      { name: 'MerchantMarineBlue', color: '#0652DD' },\n      { name: 'ForgottenPurple', color: '#9980FA' },\n      { name: 'HollyHock', color: '#833471' },\n      { name: 'RedPigment', color: '#EA2027' },\n      { name: 'TurkishAqua', color: '#006266' },\n      { name: '20000LeaguesUnderTheSea', color: '#1B1464' },\n      { name: 'CircumorbitalRing', color: '#5758BB' },\n      { name: 'MagentaPurple', color: '#6F1E51' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors American',\n    id: 'flat-ui-colors-american',\n    emoji: '🇺🇸',\n    colors: [\n      { name: 'LightGreenishBlue', color: '#55efc4' },\n      { name: 'FadedPoster', color: '#81ecec' },\n      { name: 'GreenDarnerTail', color: '#74b9ff' },\n      { name: 'ShyMoment', color: '#a29bfe' },\n      { name: 'CityLights', color: '#dfe6e9' },\n      { name: 'MintLeaf', color: '#00b894' },\n      { name: 'RobinsEggBlue', color: '#00cec9' },\n      { name: 'ElectronBlue', color: '#0984e3' },\n      { name: 'ExodusFruit', color: '#6c5ce7' },\n      { name: 'SoothingBreeze', color: '#b2bec3' },\n      { name: 'SourLemon', color: '#ffeaa7' },\n      { name: 'FirstDate', color: '#fab1a0' },\n      { name: 'PinkGlamour', color: '#ff7675' },\n      { name: 'Pico8Pink', color: '#fd79a8' },\n      { name: 'AmericanRiver', color: '#636e72' },\n      { name: 'BrightYarrow', color: '#fdcb6e' },\n      { name: 'OrangeVille', color: '#e17055' },\n      { name: 'Chi-Gong', color: '#d63031' },\n      { name: 'PrunusAvium', color: '#e84393' },\n      { name: 'DraculaOrchid', color: '#2d3436' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors Aussie',\n    id: 'flat-ui-colors-aussie',\n    emoji: '🇦🇺',\n    colors: [\n      { name: 'Beekeeper', color: '#f6e58d' },\n      { name: 'SpicedNectarine', color: '#ffbe76' },\n      { name: 'PinkGlamour', color: '#ff7979' },\n      { name: 'JuneBud', color: '#badc58' },\n      { name: 'CoastalBreeze', color: '#dff9fb' },\n      { name: 'Turbo', color: '#f9ca24' },\n      { name: 'QuinceJelly', color: '#f0932b' },\n      { name: 'CarminePink', color: '#eb4d4b' },\n      { name: 'PureApple', color: '#6ab04c' },\n      { name: 'HintOfIcePack', color: '#c7ecee' },\n      { name: 'MiddleBlue', color: '#7ed6df' },\n      { name: 'Heliotrope', color: '#e056fd' },\n      { name: 'ExodusFruit', color: '#686de0' },\n      { name: 'DeepKoamaru', color: '#30336b' },\n      { name: 'SoaringEagle', color: '#95afc0' },\n      { name: 'GreenlandGreen', color: '#22a6b3' },\n      { name: 'SteelPink', color: '#be2edd' },\n      { name: 'Blurple', color: '#4834d4' },\n      { name: 'DeepCove', color: '#130f40' },\n      { name: 'WizardGrey', color: '#535c68' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors British',\n    id: 'flat-ui-colors-british',\n    emoji: '🇬🇧',\n    colors: [\n      { name: 'ProtossPylon', color: '#00a8ff' },\n      { name: 'Periwinkle', color: '#9c88ff' },\n      { name: 'Rise-N-Shine', color: '#fbc531' },\n      { name: 'DownloadProgress', color: '#4cd137' },\n      { name: 'Seabrook', color: '#487eb0' },\n      { name: 'VanaDylBlue', color: '#0097e6' },\n      { name: 'MattPurple', color: '#8c7ae6' },\n      { name: 'NanohanachaGold', color: '#e1b12c' },\n      { name: 'SkirretGreen', color: '#44bd32' },\n      { name: 'Naval', color: '#40739e' },\n      { name: 'NasturcianFlower', color: '#e84118' },\n      { name: 'LynxWhite', color: '#f5f6fa' },\n      { name: 'BlueberrySoda', color: '#7f8fa6' },\n      { name: 'MazarineBlue', color: '#273c75' },\n      { name: 'BlueNights', color: '#353b48' },\n      { name: 'HarleyOrange', color: '#c23616' },\n      { name: 'HintOfPensive', color: '#dcdde1' },\n      { name: 'ChainGangGrey', color: '#718093' },\n      { name: 'PicoVoid', color: '#192a56' },\n      { name: 'ElectroMagnetic', color: '#2f3640' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors Spanish',\n    id: 'flat-ui-colors-spanish',\n    emoji: '🇪🇸',\n    colors: [\n      { name: 'JacksonsPurple', color: '#40407a' },\n      { name: 'C64Purple', color: '#706fd3' },\n      { name: 'SwanWhite', color: '#f7f1e3' },\n      { name: 'SummerSky', color: '#34ace0' },\n      { name: 'CelestialGreen', color: '#33d9b2' },\n      { name: 'LuckyPoint', color: '#2c2c54' },\n      { name: 'Liberty', color: '#474787' },\n      { name: 'HotStone', color: '#aaa69d' },\n      { name: 'DevilBlue', color: '#227093' },\n      { name: 'PalmSpringsSplash', color: '#218c74' },\n      { name: 'FlourescentRed', color: '#ff5252' },\n      { name: 'SyntheticPumpkin', color: '#ff793f' },\n      { name: 'CrocodileTooth', color: '#d1ccc0' },\n      { name: 'MandarinSorbet', color: '#ffb142' },\n      { name: 'SpicedButterNut', color: '#ffda79' },\n      { name: 'EyeOfNewt', color: '#b33939' },\n      { name: 'ChileanFire', color: '#cd6133' },\n      { name: 'GreyPorcelain', color: '#84817a' },\n      { name: 'AlamedaOchre', color: '#cc8e35' },\n      { name: 'Desert', color: '#ccae62' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors Indian',\n    id: 'flat-ui-colors-indian',\n    emoji: '🇮🇳',\n    colors: [\n      { name: 'OrchidOrange', color: '#FEA47F' },\n      { name: 'SpiroDiscoBall', color: '#25CCF7' },\n      { name: 'HoneyGlow', color: '#EAB543' },\n      { name: 'SweetGarden', color: '#55E6C1' },\n      { name: 'FallingStar', color: '#CAD3C8' },\n      { name: 'RichGardenia', color: '#F97F51' },\n      { name: 'ClearChill', color: '#1B9CFC' },\n      { name: 'WhitePepper', color: '#F8EFBA' },\n      { name: 'Keppel', color: '#58B19F' },\n      { name: 'ShipsOfficer', color: '#2C3A47' },\n      { name: 'FieryFuchsia', color: '#B33771' },\n      { name: 'BlueBell', color: '#3B3B98' },\n      { name: 'GeorgiaPeach', color: '#FD7272' },\n      { name: 'OasisStream', color: '#9AECDB' },\n      { name: 'BrightUbe', color: '#D6A2E8' },\n      { name: 'MagentaPurple', color: '#6D214F' },\n      { name: 'EndingNavyBlue', color: '#182C61' },\n      { name: 'SasquatchSocks', color: '#FC427B' },\n      { name: 'PineGlade', color: '#BDC581' },\n      { name: 'HighlighterLavender', color: '#82589F' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors French',\n    id: 'flat-ui-colors-french',\n    emoji: '🇫🇷',\n    colors: [\n      { name: 'FlatFlesh', color: '#fad390' },\n      { name: 'MelonMelody', color: '#f8c291' },\n      { name: 'Livid', color: '#6a89cc' },\n      { name: 'Spray', color: '#82ccdd' },\n      { name: 'ParadiseGreen', color: '#b8e994' },\n      { name: 'SquashBlossom', color: '#f6b93b' },\n      { name: 'MandarinRed', color: '#e55039' },\n      { name: 'AzraqBlue', color: '#4a69bd' },\n      { name: 'Dupain', color: '#60a3bc' },\n      { name: 'AuroraGreen', color: '#78e08f' },\n      { name: 'IcelandPoppy', color: '#fa983a' },\n      { name: 'TomatoRed', color: '#eb2f06' },\n      { name: 'YueGuangBlue', color: '#1e3799' },\n      { name: 'GoodSamaritan', color: '#3c6382' },\n      { name: 'Waterfall', color: '#38ada9' },\n      { name: 'CarrotOrange', color: '#e58e26' },\n      { name: 'JalapenoRed', color: '#b71540' },\n      { name: 'DarkSapphire', color: '#0c2461' },\n      { name: 'ForestBlues', color: '#0a3d62' },\n      { name: 'ReefEncounter', color: '#079992' }\n    ]\n  }\n];\n","import createDataContext from './createDataContext';\n\nimport seedData from '../data/seedColors';\n\nconst paletteReducer = (state, action) => {\n  const { payload, type } = action;\n\n  switch (type) {\n    case 'add_palette':\n      return [...state, payload];\n    case 'remove_palette':\n      return state.filter(p => p.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst addPalette = dispatch => newPalette => {\n  dispatch({ type: 'add_palette', payload: newPalette });\n};\n\nconst removePalette = dispatch => id => {\n  dispatch({ type: 'remove_palette', payload: id });\n};\n\nconst loadData = () => {\n  const savedPalettes = JSON.parse(window.localStorage.getItem('palettes'));\n  return savedPalettes || seedData;\n};\n\nexport const { Context, Provider } = createDataContext(\n  paletteReducer,\n  { addPalette, removePalette },\n  loadData()\n);\n","import React, { useState, useContext } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport generatePalette from './utils/colorHelper';\nimport ColorBox from './ColorBox';\nimport Navbar from './Navbar';\nimport PaletteFooter from './PaletteFooter';\nimport _ from 'lodash';\n\nimport { Context } from './context/PaletteContext';\n\nconst SingleColorPalette = ({ match }) => {\n  const [format, setFormat] = useState('hex');\n\n  const { state: palettes } = useContext(Context);\n\n  const palette = palettes.find(p => p.id === match.params.paletteId);\n\n  let deepClone = _.cloneDeep(palette);\n\n  deepClone.colors = [\n    deepClone.colors.find(\n      element => element.name.toLowerCase() === match.params.colorId\n    )\n  ];\n\n  const {\n    colors: singlePaletteColors,\n    emoji,\n    paletteName,\n    id: paletteId\n  } = generatePalette(deepClone);\n\n  const colorArray = Object.keys(singlePaletteColors)\n    .filter(k => k !== '50')\n    .map(k => singlePaletteColors[k][0]);\n\n  const changeFormat = e => setFormat(e.target.value);\n\n  return (\n    <div className='SingleColorPalette Palette'>\n      <Navbar showSlider={false} format={format} changeFormat={changeFormat} />\n      <div className='Palette-colors'>\n        {colorArray.map(color => (\n          <ColorBox\n            {...color}\n            showMore={false}\n            format={format}\n            key={color.name}\n          />\n        ))}\n        <div className='go-back ColorBox'>\n          <Link to={`/palette/${paletteId}`} className='back-button'>\n            Go Back\n          </Link>\n        </div>\n      </div>\n      <PaletteFooter emoji={emoji} paletteName={paletteName} />\n    </div>\n  );\n};\n\nexport default withRouter(SingleColorPalette);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport './styles/MiniPalette.css';\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    padding: '0.5rem',\n    position: 'relative',\n    overflow: 'hidden',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  colors: {\n    backgroundColor: 'white',\n    height: '150px',\n    width: '100%'\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: '0',\n    color: 'black',\n    paddingTop: '0.5rem',\n    fontSize: '1rem',\n    position: 'relative'\n  },\n  emoji: {\n    marginLeft: '0.5rem',\n    fontSize: '1.5rem'\n  },\n  miniColor: {\n    height: '25%',\n    width: '20%',\n    display: 'inline-block',\n    margin: '0 auto',\n    position: 'relative',\n    marginBottom: '-3.5px'\n  }\n};\n\nconst MiniPalette = ({ classes, removePalette, ...palette }) => {\n  return (\n    <div className=\"MiniPalette\">\n      <div className={classes.root} onClick={palette.goToPalette}>\n        <DeleteIcon className=\"delete-icon\" onClick={removePalette} />\n        <div className={classes.colors}>\n          {palette.colors.map(color => (\n            <div\n              className={classes.miniColor}\n              style={{ backgroundColor: color.color }}\n              key={color.name}\n            ></div>\n          ))}\n        </div>\n        <h5 className={classes.title}>\n          {palette.paletteName}\n          <span className={classes.emoji}>{palette.emoji}</span>\n        </h5>\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(MiniPalette);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport blue from '@material-ui/core/colors/blue';\nimport red from '@material-ui/core/colors/red';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst DeletePaletteDialog = ({ open, closeDialog, handleDelete }) => {\n  return (\n    <Dialog\n      open={open}\n      aria-labelledby=\"delete-dialog-title\"\n      onClose={closeDialog}\n    >\n      <DialogTitle id=\"delete-dialog-title\">Delete This Palette?</DialogTitle>\n      <List>\n        <ListItem button onClick={handleDelete}>\n          <ListItemAvatar>\n            <Avatar style={{ backgroundColor: blue[100], color: blue[600] }}>\n              <CheckIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Delete\" />\n        </ListItem>\n        <ListItem button onClick={closeDialog}>\n          <ListItemAvatar>\n            <Avatar style={{ backgroundColor: red[100], color: red[600] }}>\n              <CloseIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Cancel\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n};\n\nexport default DeletePaletteDialog;\n","import React, { useContext, useEffect, useState } from 'react';\nimport MiniPalette from './MiniPalette';\n\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './styles/PaletteList.css';\n\nimport { Context } from './context/PaletteContext';\nimport DeletePaletteDialog from './DeletePaletteDialog';\n\nconst PaletteList = ({ history }) => {\n  const { removePalette, state: palettes } = useContext(Context);\n\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteId, setDeleteId] = useState('');\n\n  const closeDialog = () => setOpenDeleteDialog(false);\n\n  const goToPalette = id => () => history.push(`/palette/${id}`);\n\n  const openDialog = id => e => {\n    e.stopPropagation();\n    setOpenDeleteDialog(true);\n    setDeleteId(id);\n  };\n\n  const handleDeletePalette = () => {\n    removePalette(deleteId);\n    setDeleteId('');\n    setOpenDeleteDialog(false);\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem('palettes', JSON.stringify(palettes));\n  }, [palettes]);\n\n  return (\n    <div className=\"PaletteList\">\n      <div className=\"PaletteList-container\">\n        <nav className=\"PaletteList-header\">\n          <h1>React Colors</h1>\n          <Link to=\"/palette/new\">Create Palette</Link>\n        </nav>\n\n        <div className=\"PaletteList-palettes-container\">\n          {palettes.map(palette => (\n            <MiniPalette\n              {...palette}\n              goToPalette={goToPalette(palette.id)}\n              key={palette.id}\n              removePalette={openDialog(palette.id)}\n            />\n          ))}\n        </div>\n      </div>\n      <DeletePaletteDialog\n        open={openDeleteDialog}\n        closeDialog={closeDialog}\n        handleDelete={handleDeletePalette}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(PaletteList);\n","import React, { useState, useContext } from 'react';\nimport ColorBox from './ColorBox';\n\nimport generatePalette from './utils/colorHelper';\n\nimport './styles/Palette.css';\nimport Navbar from './Navbar';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport PaletteFooter from './PaletteFooter';\n\nimport { Context } from './context/PaletteContext';\n\nconst Palette = ({ match }) => {\n  const { state: palettes } = useContext(Context);\n\n  const [level, setLevel] = useState(500);\n  const [format, setFormat] = useState('hex');\n\n  const existingPalette = palettes.find(p => p.id === match.params.id);\n  if (!existingPalette) return <Redirect to='/react-colors' />;\n\n  const palette = generatePalette(existingPalette);\n\n  const { colors, paletteName, emoji, id: paletteId } = palette;\n\n  const changeLevel = newLevel => setLevel(newLevel);\n\n  const changeFormat = e => setFormat(e.target.value);\n\n  return (\n    <div className='Palette'>\n      <Navbar\n        level={level}\n        changeLevel={changeLevel}\n        format={format}\n        changeFormat={changeFormat}\n        showSlider={true}\n      />\n      <div className='Palette-colors'>\n        {colors[level].map(color => (\n          <ColorBox\n            {...color}\n            format={format}\n            key={color.name}\n            paletteId={paletteId}\n            showMore={true}\n          />\n        ))}\n      </div>\n      <PaletteFooter paletteName={paletteName} emoji={emoji} />\n    </div>\n  );\n};\n\nexport default withRouter(Palette);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport { DRAWER_WIDTH } from './config/ui-variables';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: DRAWER_WIDTH,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: DRAWER_WIDTH\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst PaletteDrawer = ({ children, drawerOpen, setDrawerOpen }) => {\n  const classes = useStyles();\n\n  const handleDrawerClose = () => setDrawerOpen(false);\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant='persistent'\n      anchor='left'\n      open={drawerOpen}\n      classes={{\n        paper: classes.drawerPaper\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronRightIcon />\n        </IconButton>\n      </div>\n\n      <Divider />\n\n      {children}\n    </Drawer>\n  );\n};\n\nexport default PaletteDrawer;\n","export const DRAWER_WIDTH = 400;\n","import createDataContext from './createDataContext';\nconst arrayMove = require('array-move');\n\nconst INITIAL_COLORS = [\n  { name: 'red', color: '#F44336' },\n  { name: 'pink', color: '#E91E63' },\n  { name: 'purple', color: '#9C27B0' },\n  { name: 'deeppurple', color: '#673AB7' },\n  { name: 'indigo', color: '#3F51B5' },\n  { name: 'blue', color: '#2196F3' },\n  { name: 'lightblue', color: '#03A9F4' },\n  { name: 'cyan', color: '#00BCD4' },\n  { name: 'teal', color: '#009688' },\n  { name: 'green', color: '#4CAF50' },\n  { name: 'lightgreen', color: '#8BC34A' },\n  { name: 'lime', color: '#CDDC39' },\n  { name: 'yellow', color: '#FFEB3B' },\n  { name: 'amber', color: '#FFC107' },\n  { name: 'orange', color: '#FF9800' },\n  { name: 'deeporange', color: '#FF5722' },\n  { name: 'brown', color: '#795548' },\n  { name: 'grey', color: '#9E9E9E' },\n  { name: 'bluegrey', color: '#607D8B' }\n];\n\nconst INITIAL_STATE = {\n  newPaletteName: '',\n  newColors: INITIAL_COLORS,\n  newColorName: '',\n  errorMessage: '',\n  newColor: 'teal'\n};\n\nconst newPaletteFormContext = (state, { type, payload }) => {\n  switch (type) {\n    case 'reset_form':\n      return INITIAL_STATE;\n    case 'change_new_palette_name':\n      return { ...state, newPaletteName: payload };\n\n    case 'change_new_color_name':\n      return { ...state, newColorName: payload };\n\n    case 'add_color_to_new_palette':\n      return { ...state, newColors: [...state.newColors, payload] };\n    case 'remove_new_color':\n      return {\n        ...state,\n        newColors: [\n          ...state.newColors.filter(\n            c => c.name.toLowerCase() !== payload.toLowerCase()\n          )\n        ]\n      };\n\n    case 'change_colors_sequence':\n      return {\n        ...state,\n        newColors: arrayMove(\n          state.newColors,\n          payload.oldIndex,\n          payload.newIndex\n        )\n      };\n    case 'change_new_color':\n      return { ...state, newColor: payload };\n\n    case 'set_error_message':\n      return { ...state, errorMessage: payload };\n\n    case 'clear_colors':\n      return { ...state, newColors: [] };\n\n    default:\n      return state;\n  }\n};\n\nconst changeNewPaletteName = dispatch => newPaletteName => {\n  dispatch({ type: 'change_new_palette_name', payload: newPaletteName });\n};\n\nconst changeNewColorName = dispatch => name => {\n  dispatch({ type: 'change_new_color_name', payload: name });\n};\n\nconst addColorToPalette = dispatch => newColor => {\n  dispatch({ type: 'add_color_to_new_palette', payload: newColor });\n};\n\nconst deleteColor = dispatch => name => {\n  dispatch({ type: 'remove_new_color', payload: name });\n};\n\nconst resetNewPaletteForm = dispatch => () => {\n  dispatch({ type: 'reset_form' });\n};\n\nconst changeNewColor = dispatch => color => {\n  dispatch({ type: 'change_new_color', payload: color });\n};\n\nconst setErrorMessage = dispatch => message => {\n  dispatch({ type: 'set_error_message', payload: message });\n};\n\nconst changeColorsSequence = dispatch => (oldIndex, newIndex) => {\n  dispatch({ type: 'change_colors_sequence', payload: { oldIndex, newIndex } });\n};\n\nconst clearColors = dispatch => () => {\n  dispatch({ type: 'clear_colors' });\n};\n\nexport const { Context, Provider } = createDataContext(\n  newPaletteFormContext,\n  {\n    deleteColor,\n    resetNewPaletteForm,\n    changeNewColor,\n    setErrorMessage,\n    addColorToPalette,\n    changeNewPaletteName,\n    changeNewColorName,\n    changeColorsSequence,\n    clearColors\n  },\n  INITIAL_STATE\n);\n","import React, { useContext } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { Button } from '@material-ui/core';\n\nimport { Context as NewPaletteFormContext } from './context/NewPaletteFormContext';\nimport { Context as PaletteContext } from './context/PaletteContext';\n\nimport './styles/PaletteColorPicker.css';\n\nconst MAX_NEW_COLORS = 20;\n\nconst PaletteColorPicker = () => {\n  const { state: palettes } = useContext(PaletteContext);\n  const {\n    addColorToPalette,\n    changeNewColor,\n    setErrorMessage,\n    changeNewColorName,\n    clearColors,\n    state: newFormState\n  } = useContext(NewPaletteFormContext);\n\n  const { newColors, newColorName, newColor, errorMessage } = newFormState;\n\n  const isPaletteFull = newColors.length >= MAX_NEW_COLORS;\n\n  const handleAddNewColor = () => {\n    const newColorObject = { color: newColor, name: newColorName };\n\n    const isNameUnique = newColors\n      .map(c => c.name)\n      .every(n => n.toLowerCase() !== newColorName.toLowerCase());\n    const isColorUnique = newColors\n      .map(c => c.color)\n      .every(c => c !== newColor);\n    if (newColorName.trim() === '') return setErrorMessage('Name is required');\n    if (!isNameUnique) return setErrorMessage('New color name must be unique');\n    if (!isColorUnique) return setErrorMessage('Color already used!');\n\n    addColorToPalette(newColorObject);\n    resetForm();\n  };\n\n  const addRandomColor = () => {\n    const allColors = palettes\n      .map(p => p.colors)\n      .flat()\n      .filter(\n        c =>\n          !newColors.map(nc => nc.color).includes(c.color) &&\n          !newColors.map(nc => nc.name).includes(c.name)\n      );\n    const rand = Math.floor(Math.random() * allColors.length);\n    const randomColor = allColors[rand];\n    addColorToPalette(randomColor);\n  };\n\n  const resetForm = () => {\n    changeNewColorName('');\n    changeNewColor('');\n  };\n\n  return (\n    <div className=\"PaletteColorPicker\">\n      <h2 className=\"PaletteColorPicker-header\">Design Your Palette </h2>\n      <div className=\"button-container\">\n        <Button color=\"secondary\" variant=\"contained\" onClick={clearColors}>\n          CLEAR PALETTE\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={addRandomColor}\n          disabled={isPaletteFull}\n        >\n          RANDOM COLOR\n        </Button>\n      </div>\n      <ChromePicker\n        color={newColor}\n        onChangeComplete={c => changeNewColor(c.hex)}\n        className=\"color-picker\"\n      />\n\n      <ValidatorForm onSubmit={handleAddNewColor} className=\"add-color-form\">\n        <TextValidator\n          label=\"Color Name\"\n          value={newColorName}\n          onChange={e => changeNewColorName(e.target.value)}\n          variant=\"filled\"\n          className=\"color-name-input\"\n        />\n        {errorMessage && (\n          <span style={{ color: 'red', display: 'block' }}>{errorMessage}</span>\n        )}\n\n        <Button\n          className=\"add-color-btn\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ backgroundColor: isPaletteFull ? 'Grey' : newColor }}\n          type=\"submit\"\n          disabled={isPaletteFull}\n        >\n          {isPaletteFull ? 'PALETTE FULL' : 'ADD COLOR'}\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default PaletteColorPicker;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { DRAWER_WIDTH } from './config/ui-variables';\n\nconst useStyles = makeStyles(theme => ({\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    height: 'calc(100vh - 64px)',\n    padding: 0,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -DRAWER_WIDTH\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nconst PaletteFormContent = ({ children, drawerOpen }) => {\n  const classes = useStyles();\n\n  return (\n    <main\n      className={clsx(classes.content, {\n        [classes.contentShift]: drawerOpen\n      })}\n    >\n      <div className={classes.drawerHeader} />\n      {children}\n    </main>\n  );\n};\n\nexport default PaletteFormContent;\n","import React from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { DRAWER_WIDTH } from './config/ui-variables';\n\nimport './styles/PaletteFormAppBar.css';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    marginLeft: DRAWER_WIDTH,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  }\n}));\n\nconst PaletteFormAppBar = ({ children, setDrawerOpen, drawerOpen }) => {\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => setDrawerOpen(true);\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      color=\"default\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: drawerOpen\n      })}\n    >\n      <Toolbar className=\"PaletteFormAppBar-toolbar\">\n        {!drawerOpen && (\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n          >\n            <AddToPhotosIcon />\n          </IconButton>\n        )}\n        <Typography variant=\"h6\" noWrap>\n          Create Palette\n        </Typography>\n        {children}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default PaletteFormAppBar;\n","import React from 'react';\nimport './styles/DraggableColorBox.css';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { SortableElement } from 'react-sortable-hoc';\n\nconst DraggableColorBox = ({ color, name, removeColor }) => {\n  return (\n    <div style={{ backgroundColor: color }} className={'DraggableColorBox'}>\n      <div className=\"box-content\">\n        <span>{name}</span>\n        <DeleteIcon className=\"delete-icon\" onClick={removeColor} />\n      </div>\n    </div>\n  );\n};\n\nexport default SortableElement(DraggableColorBox);\n","import React, { useContext } from 'react';\nimport { SortableContainer } from 'react-sortable-hoc';\nimport DraggableColorBox from './DraggableColorBox';\nimport { Context as NewPaletteFormContext } from './context/NewPaletteFormContext';\n\nconst DraggableColorList = () => {\n  const { deleteColor, state: newFormState } = useContext(\n    NewPaletteFormContext\n  );\n\n  const { newColors } = newFormState;\n\n  return (\n    <div style={{ height: '100%' }}>\n      {newColors.map(({ color, name }, i) => (\n        <DraggableColorBox\n          color={color}\n          name={name}\n          removeColor={() => deleteColor(name)}\n          key={name}\n          index={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default SortableContainer(DraggableColorList);\n","import React, { useState, useContext, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\n\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\n\nimport { Context as PaletteContext } from './context/PaletteContext';\n\nimport { Context as NewPaletteFormContext } from './context/NewPaletteFormContext';\nimport { withRouter } from 'react-router-dom';\n\nconst PaletteMetaForm = ({ hideForm, history }) => {\n  const [stage, setStage] = useState('form');\n\n  const { addPalette, state: palettes } = useContext(PaletteContext);\n\n  const {\n    changeNewPaletteName,\n    resetNewPaletteForm,\n    state: newFormState\n  } = useContext(NewPaletteFormContext);\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule('isPaletteNameUnique', value =>\n      palettes.every(\n        ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n      )\n    );\n  }, [palettes]);\n\n  const { newPaletteName, newColors } = newFormState;\n\n  const showEmojiPicker = () => setStage('emoji');\n\n  const createNewPalette = emoji => {\n    addPalette({\n      paletteName: newPaletteName,\n      id: newPaletteName.toLowerCase().replace(/ /g, '-'),\n      emoji: emoji.native,\n      colors: newColors\n    });\n    resetNewPaletteForm();\n    history.push('/');\n  };\n\n  return (\n    <div>\n      <Dialog open={stage === 'emoji'} onClose={hideForm}>\n        <DialogTitle id=\"form-dialog-title\">Choose a Palette Emoji</DialogTitle>\n        <Picker title=\"Pick a Palette Emoji\" onSelect={createNewPalette} />\n      </Dialog>\n      <Dialog\n        open={stage === 'form'}\n        aria-labelledby=\"form-dialog-title\"\n        onClose={hideForm}\n      >\n        <DialogTitle id=\"form-dialog-title\">Choose a Palette Name</DialogTitle>\n        <ValidatorForm onSubmit={showEmojiPicker}>\n          <DialogContent>\n            <DialogContentText>\n              Please enter a name for your new beautiful palette. Make sure it's\n              unique!\n            </DialogContentText>\n\n            <TextValidator\n              label=\"Palette Name\"\n              value={newPaletteName}\n              name=\"newPaletteName\"\n              onChange={e => changeNewPaletteName(e.target.value)}\n              fullWidth\n              margin=\"normal\"\n              validators={['required', 'isPaletteNameUnique']}\n              errorMessages={['Enter Palette Name', 'Name already used']}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={hideForm} color=\"primary\">\n              Cancel\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Save Palette\n            </Button>\n          </DialogActions>\n        </ValidatorForm>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default withRouter(PaletteMetaForm);\n","import React, { useState, useContext } from 'react';\nimport PaletteDrawer from './PaletteDrawer';\nimport PaletteColorPicker from './PaletteColorPicker';\nimport { withRouter, Link } from 'react-router-dom';\nimport PaletteFormContent from './PaletteFormContent';\nimport './styles/NewPaletteForm.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PaletteFormAppBar from './PaletteFormAppBar';\nimport { Button } from '@material-ui/core';\n\nimport { Context as NewPaletteFormContext } from './context/NewPaletteFormContext';\n\nimport DraggableColorList from './DraggableColorList';\nimport PaletteMetaForm from './PaletteMetaForm';\n\nconst NewPaletteForm = () => {\n  const { changeColorsSequence } = useContext(NewPaletteFormContext);\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    changeColorsSequence(oldIndex, newIndex);\n  };\n\n  const hideForm = () => setShowForm(false);\n  const revealForm = () => setShowForm(true);\n\n  return (\n    <div className=\"NewPaletteForm\">\n      <CssBaseline />\n\n      <PaletteFormAppBar setDrawerOpen={setDrawerOpen} drawerOpen={drawerOpen}>\n        <div className=\"NewPaletteForm-appbar button-group\">\n          <Link to=\"/\">\n            <Button variant=\"contained\" color=\"secondary\">\n              Go Back\n            </Button>\n          </Link>\n          <Button variant=\"contained\" color=\"primary\" onClick={revealForm}>\n            Save\n          </Button>\n        </div>\n\n        {showForm && <PaletteMetaForm hideForm={hideForm} />}\n      </PaletteFormAppBar>\n\n      <PaletteDrawer setDrawerOpen={setDrawerOpen} drawerOpen={drawerOpen}>\n        <PaletteColorPicker />\n      </PaletteDrawer>\n      <PaletteFormContent drawerOpen={drawerOpen}>\n        <DraggableColorList axis=\"xy\" onSortEnd={onSortEnd} />\n      </PaletteFormContent>\n    </div>\n  );\n};\n\nexport default withRouter(NewPaletteForm);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport SingleColorPalette from './SingleColorPalette';\nimport PaletteList from './PaletteList';\nimport Palette from './Palette';\nimport NewPaletteForm from './NewPaletteForm';\n\nimport { Provider as PaletteProvider } from './context/PaletteContext';\nimport { Provider as NewPaletteFormProvider } from './context/NewPaletteFormContext';\n\nfunction App() {\n  return (\n    <NewPaletteFormProvider>\n      <PaletteProvider>\n        <Switch>\n          <Route\n            exact\n            path='/react-colors/palette/:paletteId/:colorId'\n            render={SingleColorPalette}\n          />\n          <Route exact path='/react-colors' render={() => <PaletteList />} />\n          <Route\n            exact\n            path='/react-colors/palette/new'\n            render={NewPaletteForm}\n          />\n          <Route exact path='/react-colors/palette/:id' render={Palette} />\n          <Redirect to='/react-colors' />\n        </Switch>\n      </PaletteProvider>\n    </NewPaletteFormProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}